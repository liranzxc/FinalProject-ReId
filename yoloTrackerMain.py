# -*- coding: utf-8 -*-
"""FinalProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V5pgYFxuUwxiOg7D3zlqYixvA5FNf66K
"""
import cv2
import pprint

from finalProject.classes.enumTypeKeyPoints import NamesAlgorithms
from finalProject.classes.yolo import Yolo
from finalProject.utils.drawing.common import draw_keypoints
from finalProject.utils.keyPoints.AlgoritamKeyPoints import createDescriptorTarget
from finalProject.utils.tracking.TrackingByYolo import TrackingByYolo
import matplotlib.pyplot as plt

import json

if __name__ == "__main__":
    """# import images"""

    with open('./config.txt') as file_json:

        config = json.load(file_json)

        frames = []
        cap = cv2.VideoCapture(config["inputVideo"])
        i = 0
        while i < config["skipRateFrameFromBeginning"]:
            ret, frame = cap.read()
            i += 1

        index = 0
        while ret:
            frames.append(frame)
            ret, frame = cap.read()

        # path = "re-id/sequenses/multi_shot/cam_a/person_0001"
        # f = []
        # for (dirpath, dirnames, filenames) in os.walk(path):
        #     f.extend(filenames)
        #     break
        #
        # f.sort()
        # f = list(map(lambda file: path + "/" + file, f))
        # #getMaskFromOpticalFlow(f,isVideo=False)

        ## init yolo

        yolo = Yolo()
        yolo.initYolo()

        myTargets = TrackingByYolo(frames, yolo, isVideo=config["isVideo"], config=config)

        descriptorTarget = createDescriptorTarget(myTargets)

        pp = pprint.PrettyPrinter(indent=4)
        #
        # pp.pprint(descriptorTarget)

        frameExmaple = descriptorTarget[1][0]

        frameExmaple["frame"] = cv2.cvtColor(frameExmaple["frame"], cv2.COLOR_BGR2RGB)
        draw_keypoints(frameExmaple["frame"], frameExmaple[NamesAlgorithms.KAZE.name]["keys"], color=(255, 0, 0))
        draw_keypoints(frameExmaple["frame"], frameExmaple[NamesAlgorithms.ORB.name]["keys"], color=(0, 255, 255))
        draw_keypoints(frameExmaple["frame"], frameExmaple[NamesAlgorithms.SURF.name]["keys"], color=(255, 255, 0))
        draw_keypoints(frameExmaple["frame"], frameExmaple[NamesAlgorithms.SIFT.name]["keys"], color=(0, 255, 0))

        fig, ax = plt.subplots()

        labels = NamesAlgorithms.KAZE.name + "- Color : RED \n" + \
                 NamesAlgorithms.ORB.name + "- Color : light Blue \n" + \
                 NamesAlgorithms.SURF.name + "- Color : YELLOW \n" + \
                 NamesAlgorithms.SIFT.name + "- Color : Green \n"

        ax.set_xlabel(labels)

        ax.imshow(frameExmaple["frame"])
        plt.show()
